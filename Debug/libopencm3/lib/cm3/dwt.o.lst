   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"dwt.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.dwt_enable_cycle_counter,"ax",%progbits
  16              		.align	1
  17              		.global	dwt_enable_cycle_counter
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	dwt_enable_cycle_counter:
  25              	.LFB0:
  26              		.file 1 "../libopencm3/lib/cm3/dwt.c"
   1:../libopencm3/lib/cm3/dwt.c **** /** @defgroup CM3_dwt_file DWT
   2:../libopencm3/lib/cm3/dwt.c ****  *
   3:../libopencm3/lib/cm3/dwt.c ****  * @ingroup CM3_files
   4:../libopencm3/lib/cm3/dwt.c ****  *
   5:../libopencm3/lib/cm3/dwt.c ****  * @brief <b>libopencm3 Cortex-M Data Watchpoint and Trace unit</b>
   6:../libopencm3/lib/cm3/dwt.c ****  *
   7:../libopencm3/lib/cm3/dwt.c ****  * The DWT provides
   8:../libopencm3/lib/cm3/dwt.c ****  * * Comparators, that support
   9:../libopencm3/lib/cm3/dwt.c ****  *   * watch points
  10:../libopencm3/lib/cm3/dwt.c ****  *   * data tracing
  11:../libopencm3/lib/cm3/dwt.c ****  *   * signalling to ETM
  12:../libopencm3/lib/cm3/dwt.c ****  *   * PC value tracing
  13:../libopencm3/lib/cm3/dwt.c ****  *   * cycle count matching
  14:../libopencm3/lib/cm3/dwt.c ****  * * extra PC sampling
  15:../libopencm3/lib/cm3/dwt.c ****  *   * Sampling as a result of a clock count
  16:../libopencm3/lib/cm3/dwt.c ****  *   * external access for sampling
  17:../libopencm3/lib/cm3/dwt.c ****  * * exception trace
  18:../libopencm3/lib/cm3/dwt.c ****  * * performance profiling counters.
  19:../libopencm3/lib/cm3/dwt.c ****  *
  20:../libopencm3/lib/cm3/dwt.c ****  * Which of these features are available is unfortunately implementation defined.
  21:../libopencm3/lib/cm3/dwt.c ****  *
  22:../libopencm3/lib/cm3/dwt.c ****  * @see ARMv7m Architecture Reference Manual (Chapter ARMv7-M Debug)
  23:../libopencm3/lib/cm3/dwt.c ****  *
  24:../libopencm3/lib/cm3/dwt.c ****  * LGPL License Terms @ref lgpl_license
  25:../libopencm3/lib/cm3/dwt.c ****  * @{
  26:../libopencm3/lib/cm3/dwt.c ****  */
  27:../libopencm3/lib/cm3/dwt.c **** /*
  28:../libopencm3/lib/cm3/dwt.c ****  * This file is part of the libopencm3 project.
  29:../libopencm3/lib/cm3/dwt.c ****  *
  30:../libopencm3/lib/cm3/dwt.c ****  * Copyright (C) 2013 Frantisek Burian <BuFran@seznam.cz>
  31:../libopencm3/lib/cm3/dwt.c ****  *
  32:../libopencm3/lib/cm3/dwt.c ****  * This library is free software: you can redistribute it and/or modify
  33:../libopencm3/lib/cm3/dwt.c ****  * it under the terms of the GNU Lesser General Public License as published by
  34:../libopencm3/lib/cm3/dwt.c ****  * the Free Software Foundation, either version 3 of the License, or
  35:../libopencm3/lib/cm3/dwt.c ****  * (at your option) any later version.
  36:../libopencm3/lib/cm3/dwt.c ****  *
  37:../libopencm3/lib/cm3/dwt.c ****  * This library is distributed in the hope that it will be useful,
  38:../libopencm3/lib/cm3/dwt.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  39:../libopencm3/lib/cm3/dwt.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  40:../libopencm3/lib/cm3/dwt.c ****  * GNU Lesser General Public License for more details.
  41:../libopencm3/lib/cm3/dwt.c ****  *
  42:../libopencm3/lib/cm3/dwt.c ****  * You should have received a copy of the GNU Lesser General Public License
  43:../libopencm3/lib/cm3/dwt.c ****  * along with this library.  If not, see <http://www.gnu.org/licenses/>.
  44:../libopencm3/lib/cm3/dwt.c ****  */
  45:../libopencm3/lib/cm3/dwt.c **** 
  46:../libopencm3/lib/cm3/dwt.c **** #include <libopencm3/cm3/scs.h>
  47:../libopencm3/lib/cm3/dwt.c **** #include <libopencm3/cm3/dwt.h>
  48:../libopencm3/lib/cm3/dwt.c **** 
  49:../libopencm3/lib/cm3/dwt.c **** /*---------------------------------------------------------------------------*/
  50:../libopencm3/lib/cm3/dwt.c **** /** @brief DebugTrace Enable the CPU cycle counter
  51:../libopencm3/lib/cm3/dwt.c ****  *
  52:../libopencm3/lib/cm3/dwt.c ****  * This function will try to enable the CPU cycle counter that is intended for
  53:../libopencm3/lib/cm3/dwt.c ****  * benchmarking performance of the code. If function fails, the cycle counter
  54:../libopencm3/lib/cm3/dwt.c ****  * isn't available on this architecture.
  55:../libopencm3/lib/cm3/dwt.c ****  *
  56:../libopencm3/lib/cm3/dwt.c ****  * @return true, if success
  57:../libopencm3/lib/cm3/dwt.c ****  */
  58:../libopencm3/lib/cm3/dwt.c **** bool dwt_enable_cycle_counter(void)
  59:../libopencm3/lib/cm3/dwt.c **** {
  27              		.loc 1 59 1
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 00AF     		add	r7, sp, #0
  36              		.cfi_def_cfa_register 7
  60:../libopencm3/lib/cm3/dwt.c **** #if defined(__ARM_ARCH_6M__)
  61:../libopencm3/lib/cm3/dwt.c **** 	return false;			/* Not supported on ARMv6M */
  62:../libopencm3/lib/cm3/dwt.c **** #endif /* defined(__ARM_ARCH_6M__) */
  63:../libopencm3/lib/cm3/dwt.c **** 
  64:../libopencm3/lib/cm3/dwt.c **** #if defined(__ARM_ARCH_7M__) || defined(__ARM_ARCH_7EM__)
  65:../libopencm3/lib/cm3/dwt.c **** 	/* Note TRCENA is for 7M and above*/
  66:../libopencm3/lib/cm3/dwt.c **** 	SCS_DEMCR |= SCS_DEMCR_TRCENA;
  37              		.loc 1 66 12
  38 0004 0D4B     		ldr	r3, .L4
  39 0006 1B68     		ldr	r3, [r3]
  40 0008 0C4A     		ldr	r2, .L4
  41 000a 43F08073 		orr	r3, r3, #16777216
  42 000e 1360     		str	r3, [r2]
  67:../libopencm3/lib/cm3/dwt.c **** 	if (DWT_CTRL & DWT_CTRL_NOCYCCNT) {
  43              		.loc 1 67 6
  44 0010 0B4B     		ldr	r3, .L4+4
  45 0012 1B68     		ldr	r3, [r3]
  46              		.loc 1 67 15
  47 0014 03F00073 		and	r3, r3, #33554432
  48              		.loc 1 67 5
  49 0018 002B     		cmp	r3, #0
  50 001a 01D0     		beq	.L2
  68:../libopencm3/lib/cm3/dwt.c **** 		return false;		/* Not supported in implementation */
  51              		.loc 1 68 10
  52 001c 0023     		movs	r3, #0
  53 001e 09E0     		b	.L3
  54              	.L2:
  69:../libopencm3/lib/cm3/dwt.c **** 	}
  70:../libopencm3/lib/cm3/dwt.c **** 
  71:../libopencm3/lib/cm3/dwt.c **** 	DWT_CYCCNT = 0;
  55              		.loc 1 71 2
  56 0020 084B     		ldr	r3, .L4+8
  57              		.loc 1 71 13
  58 0022 0022     		movs	r2, #0
  59 0024 1A60     		str	r2, [r3]
  72:../libopencm3/lib/cm3/dwt.c **** 	DWT_CTRL |= DWT_CTRL_CYCCNTENA;
  60              		.loc 1 72 11
  61 0026 064B     		ldr	r3, .L4+4
  62 0028 1B68     		ldr	r3, [r3]
  63 002a 054A     		ldr	r2, .L4+4
  64 002c 43F00103 		orr	r3, r3, #1
  65 0030 1360     		str	r3, [r2]
  73:../libopencm3/lib/cm3/dwt.c **** 	return true;
  66              		.loc 1 73 9
  67 0032 0123     		movs	r3, #1
  68              	.L3:
  74:../libopencm3/lib/cm3/dwt.c **** #endif /* defined(__ARM_ARCH_7M__) || defined(__ARM_ARCH_7EM__) */
  75:../libopencm3/lib/cm3/dwt.c **** 
  76:../libopencm3/lib/cm3/dwt.c **** 	/* not supported on other architectures */
  77:../libopencm3/lib/cm3/dwt.c **** 	return false;
  78:../libopencm3/lib/cm3/dwt.c **** }
  69              		.loc 1 78 1
  70 0034 1846     		mov	r0, r3
  71 0036 BD46     		mov	sp, r7
  72              		.cfi_def_cfa_register 13
  73              		@ sp needed
  74 0038 80BC     		pop	{r7}
  75              		.cfi_restore 7
  76              		.cfi_def_cfa_offset 0
  77 003a 7047     		bx	lr
  78              	.L5:
  79              		.align	2
  80              	.L4:
  81 003c FCED00E0 		.word	-536809988
  82 0040 001000E0 		.word	-536866816
  83 0044 041000E0 		.word	-536866812
  84              		.cfi_endproc
  85              	.LFE0:
  87              		.section	.text.dwt_read_cycle_counter,"ax",%progbits
  88              		.align	1
  89              		.global	dwt_read_cycle_counter
  90              		.syntax unified
  91              		.thumb
  92              		.thumb_func
  93              		.fpu softvfp
  95              	dwt_read_cycle_counter:
  96              	.LFB1:
  79:../libopencm3/lib/cm3/dwt.c **** /*---------------------------------------------------------------------------*/
  80:../libopencm3/lib/cm3/dwt.c **** /** @brief DebugTrace Read the CPU cycle counter
  81:../libopencm3/lib/cm3/dwt.c ****  *
  82:../libopencm3/lib/cm3/dwt.c ****  * This function reads the core cycle counter if it is enabled. It is the
  83:../libopencm3/lib/cm3/dwt.c ****  * fastest clock running on the system.
  84:../libopencm3/lib/cm3/dwt.c ****  *
  85:../libopencm3/lib/cm3/dwt.c ****  * @note The CPU cycle counter must be enabled by @ref dwt_enable_cycle_counter
  86:../libopencm3/lib/cm3/dwt.c ****  *
  87:../libopencm3/lib/cm3/dwt.c ****  * @returns 0 if cycle counter is not supported or enabled, the cycle counter
  88:../libopencm3/lib/cm3/dwt.c ****  * value otherwise.
  89:../libopencm3/lib/cm3/dwt.c ****  */
  90:../libopencm3/lib/cm3/dwt.c **** uint32_t dwt_read_cycle_counter(void)
  91:../libopencm3/lib/cm3/dwt.c **** {
  97              		.loc 1 91 1
  98              		.cfi_startproc
  99              		@ args = 0, pretend = 0, frame = 0
 100              		@ frame_needed = 1, uses_anonymous_args = 0
 101              		@ link register save eliminated.
 102 0000 80B4     		push	{r7}
 103              		.cfi_def_cfa_offset 4
 104              		.cfi_offset 7, -4
 105 0002 00AF     		add	r7, sp, #0
 106              		.cfi_def_cfa_register 7
  92:../libopencm3/lib/cm3/dwt.c **** #if defined(__ARM_ARCH_6M__)
  93:../libopencm3/lib/cm3/dwt.c **** 	return 0;		/* Not supported on ARMv6M */
  94:../libopencm3/lib/cm3/dwt.c **** #endif /* defined(__ARM_ARCH_6M__) */
  95:../libopencm3/lib/cm3/dwt.c **** 
  96:../libopencm3/lib/cm3/dwt.c **** #if defined(__ARM_ARCH_7M__) || defined(__ARM_ARCH_7EM__)
  97:../libopencm3/lib/cm3/dwt.c **** 	if (DWT_CTRL & DWT_CTRL_CYCCNTENA) {
 107              		.loc 1 97 6
 108 0004 064B     		ldr	r3, .L9
 109 0006 1B68     		ldr	r3, [r3]
 110              		.loc 1 97 15
 111 0008 03F00103 		and	r3, r3, #1
 112              		.loc 1 97 5
 113 000c 002B     		cmp	r3, #0
 114 000e 02D0     		beq	.L7
  98:../libopencm3/lib/cm3/dwt.c **** 		return DWT_CYCCNT;
 115              		.loc 1 98 10
 116 0010 044B     		ldr	r3, .L9+4
 117 0012 1B68     		ldr	r3, [r3]
 118 0014 00E0     		b	.L8
 119              	.L7:
  99:../libopencm3/lib/cm3/dwt.c **** 	} else {
 100:../libopencm3/lib/cm3/dwt.c **** 		return 0;		/* not supported or enabled */
 120              		.loc 1 100 10
 121 0016 0023     		movs	r3, #0
 122              	.L8:
 101:../libopencm3/lib/cm3/dwt.c **** 	}
 102:../libopencm3/lib/cm3/dwt.c **** #endif /* defined(__ARM_ARCH_7M__) || defined(__ARM_ARCH_7EM__) */
 103:../libopencm3/lib/cm3/dwt.c **** }
 123              		.loc 1 103 1
 124 0018 1846     		mov	r0, r3
 125 001a BD46     		mov	sp, r7
 126              		.cfi_def_cfa_register 13
 127              		@ sp needed
 128 001c 80BC     		pop	{r7}
 129              		.cfi_restore 7
 130              		.cfi_def_cfa_offset 0
 131 001e 7047     		bx	lr
 132              	.L10:
 133              		.align	2
 134              	.L9:
 135 0020 001000E0 		.word	-536866816
 136 0024 041000E0 		.word	-536866812
 137              		.cfi_endproc
 138              	.LFE1:
 140              		.text
 141              	.Letext0:
 142              		.file 2 "/home/toolchain/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/machine/_default
 143              		.file 3 "/home/toolchain/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/sys/_stdint.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 dwt.c
     /tmp/cczFgmZs.s:16     .text.dwt_enable_cycle_counter:0000000000000000 $t
     /tmp/cczFgmZs.s:24     .text.dwt_enable_cycle_counter:0000000000000000 dwt_enable_cycle_counter
     /tmp/cczFgmZs.s:81     .text.dwt_enable_cycle_counter:000000000000003c $d
     /tmp/cczFgmZs.s:88     .text.dwt_read_cycle_counter:0000000000000000 $t
     /tmp/cczFgmZs.s:95     .text.dwt_read_cycle_counter:0000000000000000 dwt_read_cycle_counter
     /tmp/cczFgmZs.s:135    .text.dwt_read_cycle_counter:0000000000000020 $d
                           .group:0000000000000000 wm4.0.5634517379934ab330ad1f3d5297a544
                           .group:0000000000000000 wm4.scs.h.22.1ac8693f455c5ba0f27b0d8537183ef0
                           .group:0000000000000000 wm4.common.h.21.c9066c2f6b12c71b40226ea6107829a4
                           .group:0000000000000000 wm4._newlib_version.h.4.9ba035841e762c3308916a0ce96032e7
                           .group:0000000000000000 wm4.features.h.33.318b64d71e0957639cfb30f1db1f7ec8
                           .group:0000000000000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:0000000000000000 wm4._intsup.h.10.48bafbb683905c4daa4565a85aeeb264
                           .group:0000000000000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:0000000000000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:0000000000000000 wm4.stdbool.h.29.07dce69c3b78884144b7f7bd19483461
                           .group:0000000000000000 wm4.common.h.67.5c568a1f62c8e726909b04e29f9e1fc0
                           .group:0000000000000000 wm4.memorymap.h.21.8c90486dae5eea2d8efddd23fe5d09d9
                           .group:0000000000000000 wm4.dwt.h.47.9d2df5d8445230216c26dbe27c3225f6

NO UNDEFINED SYMBOLS
